{"version":3,"sources":["components/about.js","components/Head.js","components/todo.js","components/todoclass.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["About","className","Head","to","Todo","useState","textInput","settextInput","textArray","settextArray","btncng","setbtncng","keyref","setkeyref","warning","setwarning","btn","setbtn","status","setstatus","useEffect","getTodo","saveTodo","timer","setTimeout","addItem","val","cr","deleteItem","key","filter","data","index","crossItem","tempAarray","map","updateHandler","console","log","updateItem","localStorage","setItem","JSON","stringify","getItem","todosf","parse","action","onSubmit","e","preventDefault","name","type","value","onChange","event","target","onClick","btnHandler","Todoclass","state","setState","inputHandler","item","enterkey","todos","this","Component","Footer","App","path","exact","component","todo","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mPAEe,SAASA,IACtB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,QACb,8CACA,uBAAGA,UAAU,mBAAb,YACW,6BADX,sBAGE,6BACA,6BAJF,oVAWE,6BACA,6BAZF,2O,MCHO,SAASC,IACpB,OACI,6BACA,yBAAKD,UAAU,WACP,kBAAC,IAAD,CAAME,GAAG,KAAT,SACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,mBCRD,SAASC,IAAQ,IAAD,EACKC,mBAAS,IADd,mBACtBC,EADsB,KACXC,EADW,OAEKF,mBAAS,IAFd,mBAEtBG,EAFsB,KAEXC,EAFW,OAGDJ,mBAAS,kBAHR,mBAGtBK,EAHsB,KAGdC,EAHc,OAIDN,mBAAS,IAJR,mBAItBO,EAJsB,KAIdC,EAJc,OAKCR,mBAAS,IALV,mBAKtBS,EALsB,KAKbC,EALa,OAMPV,mBAAS,OANF,mBAMtBW,EANsB,KAMjBC,EANiB,OAODZ,mBAAS,qCAPR,mBAOtBa,EAPsB,KAOdC,EAPc,KAU7BC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRE,MACC,CAACd,EAAWU,IAGf,IAAMK,EAAQ,WACZC,YAAW,WACTL,EAAU,qCACVJ,EAAW,MACV,MA2BCU,EAAU,WACdhB,EAAa,GAAD,mBAAKD,GAAL,CAAgB,CAAEkB,IAAKpB,EAAWqB,GAAI,QAG9CC,EAAa,SAACC,GAAD,OAAS,WAC1Bd,EAAW,WACXI,EAAU,IAAMX,EAAUqB,GAAKH,IAAM,aACrCjB,EAAaD,EAAUsB,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUH,MACzDZ,EAAO,OACPN,EAAU,kBACVJ,EAAa,IACbgB,MAGIU,EAAY,SAACJ,GAAD,OAAS,WACzB,IAAIK,EAAa1B,EACjB0B,EAAWC,KAAI,SAACJ,EAAMC,GAapB,OAZIH,IAAQG,IACiB,KAAvBE,EAAWL,GAAKF,IAClBO,EAAWL,GAAKF,GAAK,QACrBlB,EAAayB,KAEbA,EAAWL,GAAKF,GAAK,GACrBlB,EAAayB,KAIjBf,EAAU,2BACVI,IACOf,OAIL4B,EAAgB,SAACP,GAAD,OAAS,WAC7BtB,EAAaC,EAAUqB,GAAKH,KAC5Bf,EAAU,mBACVM,EAAO,UACPJ,EAAUgB,GACVQ,QAAQC,IAAI5B,GACZ2B,QAAQC,IAAItB,KAGRuB,EAAa,WACjB,IAAIL,EAAa1B,EACjBA,EAAUI,GAAQc,IAAMpB,EACxBS,EAAW,WACXI,EAAU,eAAiBX,EAAUI,GAAQc,KAC7CjB,EAAayB,GACbX,KAOID,EAAW,WACfkB,aAAaC,QAAQ,QAASC,KAAKC,UAAUnC,KAEzCa,EAAU,WACd,GAAsC,OAAlCmB,aAAaI,QAAQ,SACvBJ,aAAaC,QAAQ,QAASC,KAAKC,UAAU,SACxC,CACL,IAAIE,EAASH,KAAKI,MAAMN,aAAaI,QAAQ,UAC7CnC,EAAaoC,KAIjB,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,QACb,wCACA,uBAAGA,UAAWa,GAAUI,GACxB,0BAAM6B,OAAO,GAAGC,SArBL,SAACC,GAChBA,EAAEC,mBAqBI,2BACEC,KAAK,YACLC,KAAK,OACLC,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAWhD,EAAagD,EAAMC,OAAOH,UAEjD,uBAAGI,QAvGQ,SAACzC,GAAD,OAAS,WACd,QAARA,EACgB,KAAdV,GACFS,EAAW,WACXI,EAAU,2BACVI,MAEAE,IACAlB,EAAa,KAEE,WAARS,IACS,KAAdV,GACFS,EAAW,WACXI,EAAU,8BACVI,MAEAgB,IACAhC,EAAa,IACbU,EAAO,OACPN,EAAU,qBAoFI+C,CAAW1C,GAAMf,UAAWS,EAAQyC,KAAMnC,KAGxD,yBAAKf,UAAU,WACb,4BACGO,EAAU2B,KAAI,SAACJ,EAAMF,GACpB,OACE,wBAAIA,IAAKA,EAAK5B,UAAW8B,EAAKJ,IAC3BI,EAAKL,IACN,uBAAG+B,QAAS7B,EAAWC,GAAM5B,UAAU,qBACvC,uBAAGwD,QAASrB,EAAcP,GAAM5B,UAAU,eAC1C,uBACEwD,QAASxB,EAAUJ,GACnB5B,UAAU,mC,4CCiDf0D,G,kNA7LbC,MAAQ,CACNtD,UAAW,GACXE,UAAW,GACXE,OAAQ,iBACRM,IAAK,MACLJ,OAAQ,GACRE,QAAS,GACTI,OAAQ,kC,EAWVK,MAAQ,WACNC,YAAW,WACT,EAAKqC,SAAS,CAAE3C,OAAQ,iCAAkCJ,QAAS,OAClE,M,EAGL4C,WAAa,SAAC1C,GAAD,OAAS,WAAO,IACnBV,EAAc,EAAKsD,MAAnBtD,UACI,QAARU,EACgB,KAAdV,GACF,EAAKuD,SAAS,CACZ/C,QAAS,UACTI,OAAQ,4BAEV,EAAKK,UAEL,EAAKE,UACL,EAAKoC,SAAS,CAAEvD,UAAW,MAEZ,WAARU,IACS,KAAdV,GACF,EAAKuD,SAAS,CACZ/C,QAAS,UACTI,OAAQ,+BAEV,EAAKK,UAEL,EAAKgB,aACL,EAAKsB,SAAS,CAAEvD,UAAW,KAC3B,EAAKuD,SAAS,CAAE7C,IAAK,MAAON,OAAQ,uB,EAK1CoD,aAAe,SAACP,GACd,EAAKM,SAAL,eAAiBN,EAAMC,OAAOL,KAAOI,EAAMC,OAAOH,S,EAEpD5B,QAAU,WAAO,IAAD,EACmB,EAAKmC,MAA9BpD,EADM,EACNA,UAAWF,EADL,EACKA,UACnB,EAAKuD,SAAS,CAAErD,UAAU,GAAD,mBAAMA,GAAN,CAAiB,CAAEkB,IAAKpB,EAAWqB,GAAI,S,EAGlEC,WAAa,SAACC,GAAD,OAAS,WAAO,IACnBrB,EAAc,EAAKoD,MAAnBpD,UACR,EAAKqD,SAAS,CACZ/C,QAAS,UACTI,OAAQ,IAAMV,EAAUqB,GAAKH,IAAM,YACnClB,UAAWA,EAAUsB,QAAO,SAACiC,EAAM/B,GAAP,OAAiBA,IAAUH,KACvDb,IAAK,MACLN,OAAQ,iBACRJ,UAAW,KAEb,EAAKiB,U,EAGPgB,WAAa,WAAO,IAAD,EACwB,EAAKqB,MAAtCpD,EADS,EACTA,UAAWF,EADF,EACEA,UAAWM,EADb,EACaA,OAE1BsB,EAAa1B,EACjBA,EAAUI,GAAQc,IAAMpB,EACxB,EAAKuD,SAAS,CACZ/C,QAAS,UACTI,OAAQ,eAAiBV,EAAUI,GAAQc,IAC3ClB,UAAW0B,IAEb,EAAKX,S,EAGPU,UAAY,SAACJ,GAAD,OAAS,WAAO,IAClBrB,EAAc,EAAKoD,MAAnBpD,UACJ0B,EAAa1B,EACjB0B,EAAWC,KAAI,SAACJ,EAAMC,GAapB,OAZIH,IAAQG,IACiB,KAAvBE,EAAWL,GAAKF,IAClBO,EAAWL,GAAKF,GAAK,QAErB,EAAKkC,SAAS,CAAErD,UAAW0B,MAE3BA,EAAWL,GAAKF,GAAK,GAErB,EAAKkC,SAAS,CAAErD,UAAW0B,MAIxB1B,O,EAIX4B,cAAgB,SAACP,GAAD,OAAS,WAAO,IACtBrB,EAAc,EAAKoD,MAAnBpD,UAER,EAAKqD,SAAS,CACZvD,UAAWE,EAAUqB,GAAKH,IAC1BhB,OAAQ,kBACRM,IAAK,SACLJ,OAAQiB,M,EAIZmC,SAAW,SAACf,GACVA,EAAEC,kB,EAIJ5B,SAAW,WACTkB,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,EAAKiB,MAAMpD,a,EAGzDa,QAAU,WACR,GAAqC,OAAjCmB,aAAaI,QAAQ,QACvBJ,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,SACvC,CACL,IAAMsB,EAAQvB,KAAKI,MAAMN,aAAaI,QAAQ,SAC9C,EAAKiB,SAAS,CAAErD,UAAWyD,M,kEAxH7BC,KAAK7C,Y,2CAGL6C,KAAK5C,a,+BA0HG,IAAD,SACwD4C,KAAKN,MAA5DpD,EADD,EACCA,UAAWF,EADZ,EACYA,UAAWI,EADvB,EACuBA,OAAQM,EAD/B,EAC+BA,IAAKF,EADpC,EACoCA,QAASI,EAD7C,EAC6CA,OACpD,OACE,6BACE,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,QACb,wCAEA,uBAAGA,UAAWa,GAAUI,GACxB,0BAAM6B,OAAO,GAAGC,SAAUkB,KAAKF,UAC7B,2BACEb,KAAK,YACLE,MAAO/C,EACPgD,SAAUY,KAAKJ,aACfV,KAAK,SAEP,uBACEK,QAASS,KAAKR,WAAW1C,GACzBf,UAAWS,EACXyC,KAAMnC,KAIV,yBAAKf,UAAU,WACb,4BACGO,EAAU2B,KAAI,SAACJ,EAAMF,GACpB,OACE,wBAAIA,IAAKA,EAAK5B,UAAW8B,EAAKJ,IAC3BI,EAAKL,IACN,uBACE+B,QAAS,EAAK7B,WAAWC,GACzB5B,UAAU,qBAEZ,uBACEwD,QAAS,EAAKrB,cAAcP,GAC5B5B,UAAU,eAEZ,uBACEwD,QAAS,EAAKxB,UAAUJ,GACxB5B,UAAU,wC,GAhLVkE,cCDT,SAASC,IACtB,OACE,gCACE,2DAAgC,yCAAc,uBAAGnE,UAAU,+BAA3D,OCeSoE,MAZf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWb,IACjC,kBAAC,IAAD,CAAOW,KAAK,YAAYE,UAAWC,IACnC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAWxE,IAChC,kBAACoE,EAAD,QCHFM,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7B,QACfuB,UAAUC,cAAcQ,YAI1BvD,QAAQC,IACN,iHAKE4C,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBlD,QAAQC,IAAI,sCAGR4C,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACL3D,QAAQ2D,MAAM,4CAA6CA,MC3FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDanB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,iBAAwB3B,OAAOC,SAAS2B,MACpDC,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,iBAAN,sBAEP7B,IAgEV,SAAiCO,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAS3F,QACO,MAAf4F,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3B,MAAK,SAAAC,GACjCA,EAAa2B,aAAa5B,MAAK,WAC7BV,OAAOC,SAASsC,eAKpBnC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL1D,QAAQC,IACN,oEAvFA8E,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3B,MAAK,WACjCjD,QAAQC,IACN,iHAMJ0C,EAAgBC,EAAOC,OCvC/BE,K","file":"static/js/main.4e036b8f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"fdiv\">\r\n      <div className=\"cdiv\">\r\n        <h1>About Todo App</h1>\r\n        <p className=\"warning justify\">\r\n          Hey guys <br />\r\n          pardon my english:)\r\n          <br />\r\n          <br />\r\n          This is a simple Todo app developed using react, i just developed This\r\n          Todo app for learn react and how to use the component based web\r\n          library's. in this tiny Todo app i added two lists they are actually\r\n          not two lists, one is class component based list and other is\r\n          function component based list :p but you can use it as two lists\r\n          lol!!!\r\n          <br />\r\n          <br />\r\n          In this app i added basic functionalitys like add edit delete and\r\n          check and i developed it as a prograssive web app so you can use even\r\n          in offline and it uses browser local storage as database so dont\r\n          remember to clear storage!!!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport \"./Head.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Head() {\r\n    return (\r\n        <div>\r\n        <div className=\"headdiv\">\r\n                <Link to=\"/\">Class</Link>\r\n                <Link to=\"/function\">Function</Link>\r\n                <Link to=\"/about\">About</Link>\r\n        </div>\r\n       \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Todo() {\r\n  const [textInput, settextInput] = useState(\"\");\r\n  const [textArray, settextArray] = useState([]);\r\n  const [btncng, setbtncng] = useState(\"fas fa-plus kp\");\r\n  const [keyref, setkeyref] = useState(\"\");\r\n  const [warning, setwarning] = useState(\"\");\r\n  const [btn, setbtn] = useState(\"add\");\r\n  const [status, setstatus] = useState(\"todo app using function component\");\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getTodo();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveTodo();\r\n  }, [textArray, status]);\r\n\r\n  //functions\r\n  const timer = () => {\r\n    setTimeout(() => {\r\n      setstatus(\"todo app using function component\");\r\n      setwarning(\"\");\r\n    }, 2000);\r\n  };\r\n\r\n  const btnHandler = (btn) => () => {\r\n    if (btn === \"add\") {\r\n      if (textInput === \"\") {\r\n        setwarning(\"warning\");\r\n        setstatus(\"*Enter something to Add\");\r\n        timer();\r\n      } else {\r\n        addItem();\r\n        settextInput(\"\");\r\n      }\r\n    } else if (btn === \"update\") {\r\n      if (textInput === \"\") {\r\n        setwarning(\"warning\");\r\n        setstatus(\"*Enter something to Update\");\r\n        timer();\r\n      } else {\r\n        updateItem();\r\n        settextInput(\"\");\r\n        setbtn(\"add\");\r\n        setbtncng(\"fas fa-plus kp\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const addItem = () => {\r\n    settextArray([...textArray, { val: textInput, cr: \"\" }]);\r\n  };\r\n\r\n  const deleteItem = (key) => () => {\r\n    setwarning(\"warning\");\r\n    setstatus(\"*\" + textArray[key].val + \" deleted \");\r\n    settextArray(textArray.filter((data, index) => index !== key));\r\n    setbtn(\"add\");\r\n    setbtncng(\"fas fa-plus kp\");\r\n    settextInput(\"\");\r\n    timer();\r\n  };\r\n\r\n  const crossItem = (key) => () => {\r\n    let tempAarray = textArray;\r\n    tempAarray.map((data, index) => {\r\n      if (key === index) {\r\n        if (tempAarray[key].cr === \"\") {\r\n          tempAarray[key].cr = \"cross\";\r\n          settextArray(tempAarray);\r\n        } else {\r\n          tempAarray[key].cr = \"\";\r\n          settextArray(tempAarray);\r\n        }\r\n      }\r\n\r\n      setstatus(\"*item checked/unchecked\");\r\n      timer();\r\n      return textArray;\r\n    });\r\n  };\r\n\r\n  const updateHandler = (key) => () => {\r\n    settextInput(textArray[key].val);\r\n    setbtncng(\"fas fa-check kp\");\r\n    setbtn(\"update\");\r\n    setkeyref(key);\r\n    console.log(btncng);\r\n    console.log(btn);\r\n  };\r\n\r\n  const updateItem = () => {\r\n    var tempAarray = textArray;\r\n    textArray[keyref].val = textInput;\r\n    setwarning(\"warning\");\r\n    setstatus(\"*Updated to \" + textArray[keyref].val);\r\n    settextArray(tempAarray);\r\n    timer();\r\n  };\r\n\r\n  const enterkey = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  //localstorage\r\n  const saveTodo = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(textArray));\r\n  };\r\n  const getTodo = () => {\r\n    if (localStorage.getItem(\"todos\") === null) {\r\n      localStorage.setItem(\"todos\", JSON.stringify([]));\r\n    } else {\r\n      let todosf = JSON.parse(localStorage.getItem(\"todos\"));\r\n      settextArray(todosf);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fdiv\">\r\n      <div className=\"cdiv\">\r\n        <h1>Todo App</h1>\r\n        <p className={warning}>{status}</p>\r\n        <form action=\"\" onSubmit={enterkey}>\r\n          <input\r\n            name=\"textInput\"\r\n            type=\"text\"\r\n            value={textInput}\r\n            onChange={(event) => settextInput(event.target.value)}\r\n          />\r\n          <i onClick={btnHandler(btn)} className={btncng} name={btn}></i>\r\n        </form>\r\n\r\n        <div className=\"listdiv\">\r\n          <ul>\r\n            {textArray.map((data, key) => {\r\n              return (\r\n                <li key={key} className={data.cr}>\r\n                  {data.val}\r\n                  <i onClick={deleteItem(key)} className=\"fas fa-trash-alt\"></i>\r\n                  <i onClick={updateHandler(key)} className=\"fas fa-pen\"></i>\r\n                  <i\r\n                    onClick={crossItem(key)}\r\n                    className=\"fas fa-clipboard-check\"\r\n                  ></i>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./todoapp.css\";\r\n\r\nclass Todoclass extends Component {\r\n  state = {\r\n    textInput: \"\",\r\n    textArray: [],\r\n    btncng: \"fas fa-plus kp\",\r\n    btn: \"add\",\r\n    keyref: \"\",\r\n    warning: \"\",\r\n    status: \"todo app using class component\",\r\n  };\r\n  //Lifecycles\r\n  componentDidMount() {\r\n    this.getTodo();\r\n  }\r\n  componentDidUpdate() {\r\n    this.saveTodo();\r\n  }\r\n\r\n  //Functions\r\n  timer = () => {\r\n    setTimeout(() => {\r\n      this.setState({ status: \"todo app using class component\", warning: \"\" });\r\n    }, 2000);\r\n  };\r\n\r\n  btnHandler = (btn) => () => {\r\n    const { textInput } = this.state;\r\n    if (btn === \"add\") {\r\n      if (textInput === \"\") {\r\n        this.setState({\r\n          warning: \"warning\",\r\n          status: \"*Enter something to Add\",\r\n        });\r\n        this.timer();\r\n      } else {\r\n        this.addItem();\r\n        this.setState({ textInput: \"\" });\r\n      }\r\n    } else if (btn === \"update\") {\r\n      if (textInput === \"\") {\r\n        this.setState({\r\n          warning: \"warning\",\r\n          status: \"*Enter something to Update\",\r\n        });\r\n        this.timer();\r\n      } else {\r\n        this.updateItem();\r\n        this.setState({ textInput: \"\" });\r\n        this.setState({ btn: \"add\", btncng: \"fas fa-plus kp\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  inputHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  addItem = () => {\r\n    const { textArray, textInput } = this.state;\r\n    this.setState({ textArray: [...textArray, { val: textInput, cr: \"\" }] });\r\n  };\r\n\r\n  deleteItem = (key) => () => {\r\n    const { textArray } = this.state;\r\n    this.setState({\r\n      warning: \"warning\",\r\n      status: \"*\" + textArray[key].val + \" deleted \",\r\n      textArray: textArray.filter((item, index) => index !== key),\r\n      btn: \"add\",\r\n      btncng: \"fas fa-plus kp\",\r\n      textInput: \"\",\r\n    });\r\n    this.timer();\r\n  };\r\n\r\n  updateItem = () => {\r\n    const { textArray, textInput, keyref } = this.state;\r\n\r\n    var tempAarray = textArray;\r\n    textArray[keyref].val = textInput;\r\n    this.setState({\r\n      warning: \"warning\",\r\n      status: \"*Updated to \" + textArray[keyref].val,\r\n      textArray: tempAarray,\r\n    });\r\n    this.timer();\r\n  };\r\n\r\n  crossItem = (key) => () => {\r\n    const { textArray } = this.state;\r\n    let tempAarray = textArray;\r\n    tempAarray.map((data, index) => {\r\n      if (key === index) {\r\n        if (tempAarray[key].cr === \"\") {\r\n          tempAarray[key].cr = \"cross\";\r\n\r\n          this.setState({ textArray: tempAarray });\r\n        } else {\r\n          tempAarray[key].cr = \"\";\r\n\r\n          this.setState({ textArray: tempAarray });\r\n        }\r\n      }\r\n\r\n      return textArray;\r\n    });\r\n  };\r\n\r\n  updateHandler = (key) => () => {\r\n    const { textArray } = this.state;\r\n\r\n    this.setState({\r\n      textInput: textArray[key].val,\r\n      btncng: \"fas fa-check kp\",\r\n      btn: \"update\",\r\n      keyref: key,\r\n    });\r\n  };\r\n\r\n  enterkey = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  //localstorage\r\n  saveTodo = () => {\r\n    localStorage.setItem(\"todo\", JSON.stringify(this.state.textArray));\r\n  };\r\n\r\n  getTodo = () => {\r\n    if (localStorage.getItem(\"todo\") === null) {\r\n      localStorage.setItem(\"todo\", JSON.stringify([]));\r\n    } else {\r\n      const todos = JSON.parse(localStorage.getItem(\"todo\"));\r\n      this.setState({ textArray: todos });\r\n    }\r\n  };\r\n\r\n  //Render\r\n  render() {\r\n    const { textArray, textInput, btncng, btn, warning, status } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"fdiv\">\r\n          <div className=\"cdiv\">\r\n            <h1>Todo App</h1>\r\n\r\n            <p className={warning}>{status}</p>\r\n            <form action=\"\" onSubmit={this.enterkey}>\r\n              <input\r\n                name=\"textInput\"\r\n                value={textInput}\r\n                onChange={this.inputHandler}\r\n                type=\"text\"\r\n              />\r\n              <i\r\n                onClick={this.btnHandler(btn)}\r\n                className={btncng}\r\n                name={btn}\r\n              ></i>\r\n            </form>\r\n\r\n            <div className=\"listdiv\">\r\n              <ul>\r\n                {textArray.map((data, key) => {\r\n                  return (\r\n                    <li key={key} className={data.cr}>\r\n                      {data.val}\r\n                      <i\r\n                        onClick={this.deleteItem(key)}\r\n                        className=\"fas fa-trash-alt\"\r\n                      ></i>\r\n                      <i\r\n                        onClick={this.updateHandler(key)}\r\n                        className=\"fas fa-pen\"\r\n                      ></i>\r\n                      <i\r\n                        onClick={this.crossItem(key)}\r\n                        className=\"fas fa-clipboard-check\"\r\n                      ></i>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todoclass;\r\n","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer>\r\n      <h4>- Designed and Developed by <span> Dennis <i className=\"fab fa-x fa-react fa-spin\"></i></span> -</h4>\r\n    </footer>\r\n  );\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router,Route} from \"react-router-dom\"\nimport About from \"./components/about\";\nimport Head from \"./components/Head\";\nimport todo from \"./components/todo\";\nimport Todoclass from \"./components/todoclass\";\nimport Footer from \"./footer\";\n\nfunction App() {\n  return (\n    <Router>\n        <Head/>\n        <Route path=\"/\" exact component={Todoclass}/>\n        <Route path=\"/function\" component={todo}/>\n        <Route path=\"/about\" component={About}/>\n        <Footer/>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.register();\n"],"sourceRoot":""}